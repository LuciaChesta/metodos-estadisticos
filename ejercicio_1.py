# -*- coding: utf-8 -*-
"""Ejercicio 1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1x6W4LZkeiVpIcsAV65GgC1shI9s5uflO
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from google.colab import drive
import statistics as stats
from scipy.stats import skew, kurtosis

Datos1 = pd.ExcelFile(r'/content/drive/MyDrive/Metodos/Practica 1/Ejercicio 1/pp_media_laboulaye.xlsx')
ppplaboulaye = pd.read_excel(Datos1)

ppplaboulaye

"""# Me fijo si hay datos vacios"""

ppplaboulaye.isnull().sum()

"""# Version 1 de datos faltantes con el valor -999.9"""

missing_data = ppplaboulaye[ppplaboulaye == -999.9]

print(missing_data.dropna(how='all').stack())

"""# Version 2 donde te da el año y el mes"""

missing = ppplaboulaye.eq(-999.9).any(axis=1)

# muestra el año y mes donde se encuentra el dato faltante
for index, row in ppplaboulaye.loc[missing].iterrows():
    year = int(row['año'])
    month = row.loc[row == -999.9].index[0]
    print(f"Falta 1 dato en el año {year} y en el mes {month}")

suma = ppplaboulaye['ene'].sum()/len(ppplaboulaye['año'])

# Imprimir la suma
print('La suma es:', suma)

medias=[]
for col in ppplaboulaye.columns[2:]:  # Itera sobre todas las columnas de la tabla excepto la de 'año' y 'mes'
    suma = ppplaboulaye[col].sum() / len(ppplaboulaye['año'])
    medias.append(suma)
    print(f"La media de la columna {col} es: {suma}")
print(medias)

"""#Media sin el valor erroneo"""

grafico1=[]
for col in ppplaboulaye.columns[2:]:
    mediareal = ppplaboulaye[col][ppplaboulaye[col] != -999.9].mean()
    grafico1.append(mediareal)
    print(f"La media de la columna {col} es: {mediareal}")
print(grafico1)

x= ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic']
plt.scatter(x,grafico1)
plt.grid()
plt.title("Scatter de medias mensuales")
plt.show()

plt.bar(x,grafico1, alpha=0.7)
plt.plot(x,lista3)
plt.plot(x,lista4)
plt.plot(x, grafico1)
plt.title('Medias Mensuales con ± la desviación mensual')
plt.show()


# estas estan mal tiene que ser mensuales
#plt.hist(grafico1, rwidth=0.8, alpha=0.7,  edgecolor='black')
#plt.title("Histograma de Medias mensuales",)
#plt.xlabel("Prec vipitacion ppp")
#plt.show()

#plt.hist(grafico1,rwidth=0.8 ,density=True, cumulative=True)
#plt.title("Histograma de Medias mensuales acumulado",)
#plt.xlabel("Precipitacion ppp")
#plt.show()

plt.figure(figsize=(5, 2))
plt.hist(ppplaboulaye['ene'],rwidth=0.8)
plt.title("Histograma de Medias mensuales acumulado",)
plt.xlabel("Precipitacion ppp")
plt.show()

# hago histogramas mensuales
plt.figure(figsize=(5, 2))
plt.hist(ppplaboulaye['feb'],rwidth=0.8)
plt.title("Histograma de Medias mensuales acumulado",)
plt.xlabel("Precipitacion ppp")
plt.show()

# hago histogramas mensuales
plt.figure(figsize=(5, 2))
plt.hist(ppplaboulaye['mar'],rwidth=0.8)
plt.title("Histograma de Medias mensuales acumulado",)
plt.xlabel("Precipitacion ppp")
plt.show()

fig, axs = plt.subplots(2, 6, figsize=(12, 4))

# Dibujar un histograma en cada subtrama

axs[0,0].hist(ppplaboulaye['ene'], rwidth=0.8, alpha=0.7,  edgecolor='black', bins=5)
axs[0,1].hist(ppplaboulaye['feb'], rwidth=0.8, alpha=0.7,  edgecolor='black', bins=5)
axs[0,2].hist(ppplaboulaye['mar'], rwidth=0.8, alpha=0.7,  edgecolor='black', bins=5sig
axs[0,3].hist(ppplaboulaye['abr'], rwidth=0.8, alpha=0.7,  edgecolor='black', bins=5)
axs[0,4].hist(ppplaboulaye['may'], rwidth=0.8, alpha=0.7,  edgecolor='black', bins=5)
axs[0,5].hist(ppplaboulaye['jun'], rwidth=0.8, alpha=0.7,  edgecolor='black', bins=5)
axs[1,0].hist(ppplaboulaye['jul'], rwidth=0.8, alpha=0.7,  edgecolor='black', bins=5)
axs[1,1].hist(ppplaboulaye['ago'], rwidth=0.8, alpha=0.7,  edgecolor='black', bins=5)
axs[1,2].hist(ppplaboulaye['sep'], rwidth=0.8, alpha=0.7,  edgecolor='black', bins=5)
axs[1,3].hist(ppplaboulaye['oct'], rwidth=0.8, alpha=0.7,  edgecolor='black', bins=5)
axs[1,4].hist(ppplaboulaye['nov'], rwidth=0.8, alpha=0.7,  edgecolor='black', bins=5)
axs[1,5].hist(ppplaboulaye['oct'], rwidth=0.8, alpha=0.7,  edgecolor='black', bins=5)
fig.suptitle('Histogramas por mes de preicpitación acumulada')
fig.text(0.5, -0.01, 'Precipitación', ha='center')
fig.text(0.09, 0.5, 'Frecuencia', va='center', rotation='vertical')
plt.show()

lista3 = []

for i, w in enumerate(grafico1):
    lista3.append(grafico1[i] + desvios[i])

print(lista3)

lista4= []

for i, w in enumerate(grafico1):
    lista4.append(grafico1[i] - desvios[i])

print(lista4)

ppplaboulaye['ene']

desvios=[]
for col in ppplaboulaye.columns[2:]:
    desvio_estandar = ppplaboulaye[col].std()
    desvios.append(desvio_estandar)
    print(f"El desvio estandar de {col} es: {desvio_estandar}")
print(desvios)

for col in ppplaboulaye.columns[2:]:
    moda = stats.mode(ppplaboulaye[col])
    asimetria = skew(ppplaboulaye[col])
    curtosis = kurtosis(ppplaboulaye[col])
    varianza = stats.variance(ppplaboulaye[col])
    mediana = stats.median(ppplaboulaye[col])
    print(f"En {col} tenemos la mediana {mediana}, la asimetria   {asimetria},   la moda {moda},       la varianza {varianza}        y       la kutosis {curtosis}")

moda = stats.mode(ppplaboulaye['ene'])
print(moda)

curtosis = kurtosis(laboulayeextendido[col])
   print(curtosis)

laboulayeextendido = ppplaboulaye

for col in laboulayeextendido:
    mean = laboulayeextendido[col][laboulayeextendido[col] != -999.9].mean()
    laboulayeextendido[col] = laboulayeextendido[col].replace(-999.9, mean) 


    laboulayeextendido.to_excel('/content/drive/MyDrive/Metodos/Practica 1/Ejercicio 1/datos_modificados.xlsx', index=False)
    extendido= pd.read_excel('/content/drive/MyDrive/Metodos/Practica 1/Ejercicio 1/datos_modificados.xlsx')

pd.set_option('display.max_rows', None)
pd.set_option('display.float_format', '{:.2f}'.format)
extendido

"""#anomalias"""

ext=pd.DataFrame(laboulayeextendido)

A1960= laboulayeextendido.loc[19,'ene':'dic'] -grafico1

A1970= laboulayeextendido.loc[29,'ene':'dic'] -grafico1

A1980= laboulayeextendido.loc[39,'ene':'dic'] -grafico1

A1990= laboulayeextendido.loc[49,'ene':'dic'] -grafico1

A2000= laboulayeextendido.loc[59,'ene':'dic'] -grafico1

plt.figure(figsize=(12,6))
plt.plot(x,A1960, label='1960', linewidth=2)
plt.plot(x,A1970, label='1970', linewidth=2)
plt.plot(x,A1980, label='1980',linewidth=2)
plt.plot(x,A1990, label='1990', linewidth=2)
plt.plot(x,A2000, label='2000', linewidth=2)
plt.xlabel('Meses')
plt.ylabel('Anomalía de precipitación')
plt.title('Anomalía ', fontsize=20)
plt.grid()
plt.legend()
plt.show()

import geopandas as gpd
import matplotlib.pyplot as plt

# Cargar los datos de países desde geopandas
world = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))

# Crear un GeoDataFrame con la ubicación de Loboulaye
gdf = gpd.GeoDataFrame({'City': ['Loboulaye'], 'geometry': [Point(-63.387196, -34.133753)]}, crs='EPSG:4326')

# Crear una figura con Matplotlib
fig, ax = plt.subplots(figsize=(10, 10))

# Agregar la capa de países como contorno de fondo
world.plot(ax=ax, facecolor='none', edgecolor='black')

# Agregar la ubicación de Loboulaye como un punto rojo
gdf.plot(ax=ax, color='red', markersize=100)

# Mostrar la figurasig
plt.show()

import folium

# Crear un objeto de mapa centrado en Laboulaye
mapa = folium.Map(location=[-34.126, -63.391], zoom_start=13)

# Agregar un marcador en la ubicación de Laboulaye
folium.Marker(location=[-34.126, -63.391], popup='Laboulaye').add_to(mapa)

# Mostrar el mapa
mapa